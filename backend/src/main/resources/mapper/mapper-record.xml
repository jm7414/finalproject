<!-- src/main/resources/mapper/mapper-record.xml -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
         "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lx.project.dementia_care.dao.RecordMapper">

	<!-- record 테이블 -> DailyRecordResponseDTO 매핑 -->
	<resultMap id="RecordResult"
		type="lx.project.dementia_care.dto.DailyRecordResponseDTO">
		<id column="record_id" property="id" />
		<result column="user_id" property="userId" />
		<result column="record_date" property="recordDate" />

		<!-- JSON -> 문자열로만 수신 (의존성 없이 동작) -->
		<result column="content" property="content"
			javaType="java.lang.String" />

		<result column="created_at" property="createdAt" />
		<result column="updated_at" property="updatedAt" />
	</resultMap>

	<!-- 단건 조회 -->
	<select id="findByUserIdAndDate" resultMap="RecordResult">
		SELECT
		record_id,
		user_id,
		record_date,
		content::text AS content,
		created_at,
		updated_at
		FROM record
		WHERE user_id = #{userId}
		AND record_date = #{recordDate}
	</select>

	<!-- 기간 조회 -->
	<select id="findByRange" resultMap="RecordResult">
		SELECT
		record_id,
		user_id,
		record_date,
		content::text AS content,
		created_at,
		updated_at
		FROM record
		WHERE user_id = #{userId}
		AND record_date BETWEEN #{start} AND #{end}
		ORDER BY record_date
	</select>

	<!-- 업서트: contentJson(문자열)로 받아 jsonb로 캐스팅 -->
	<select id="upsert" resultMap="RecordResult" parameterType="map">
		INSERT INTO record (user_id, record_date, content, created_at,
		updated_at)
		VALUES (
		#{userId},
		#{recordDate},
		CAST(#{contentJson} AS jsonb),
		NOW(), NOW()
		)
		ON CONFLICT (user_id, record_date)
		DO UPDATE SET
		content = CAST(#{contentJson} AS jsonb),
		updated_at = NOW()
		RETURNING
		record_id,
		user_id,
		record_date,
		content::text AS content,
		created_at,
		updated_at
	</select>

</mapper>
